name: Release Sync
on:
  push:
  pull_request:
  schedule:
    - cron: '*/15 * * * *'

jobs:
  check:
    name: Check releases
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.fetch.outputs.tags }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Fetch release tags
        id: fetch
        run: |
          official_releases="$(./.github/workflows/fetch_releases.sh 'swoole/swoole-src')"
          mirrored_releases="$(./.github/workflows/fetch_releases.sh '${{ github.repository }}')"
          missing_releases="$(echo "$official_releases $mirrored_releases" | jq -s '.[0] - .[1]')"
          recent_releases="$(echo "$missing_releases" | jq '.[0:10]')"
          echo "tags=$recent_releases" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release ${{ matrix.tag }}
    needs: check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJson(needs.check.outputs.tags) }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.tag }}
          release_name: ${{ matrix.tag }}
